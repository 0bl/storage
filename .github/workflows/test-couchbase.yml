on:
  push:
    branches:
      - master
      - main
    paths:
      - 'couchbase/**'
  pull_request:
    paths:
      - 'couchbase/**'
name: "Tests Couchbase"
jobs:
  Tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - 1.18.x
          - 1.19.x
          - 1.20.x
    steps:
      - name: Install couchbase
        run: |
          docker run --name couchbase -d -p 8091-8097:8091-8097 -p 9123:9123 -p 11207:11207 -p 11210:11210 -p 11280:11280 -p 18091-18097:18091-18097 couchbase:enterprise-7.1.1
          sleep 7
          docker exec --tty couchbase couchbase-cli cluster-init -c localhost:8091 --cluster-username admin --cluster-password 123456 --cluster-ramsize 256 --services data
          sleep 7
          docker exec --tty couchbase couchbase-cli bucket-create -c localhost:8091 --username admin --password 123456 --bucket fiber_storage --bucket-type couchbase --bucket-ramsize 100
      -   name: Install Go
          uses: actions/setup-go@v4
          with:
            go-version: '${{ matrix.go-version }}'
      -   name: Setup Golang caches
          uses: actions/cache@v3
          with:
            # In order:
            # * Module download cache
            # * Build cache (Linux)
            # * Build cache (Mac)
            # * Build cache (Windows)
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
              ~/Library/Caches/go-build
              ~\AppData\Local\go-build
            key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-${{ matrix.go-version }}-
      -   name: Fetch Repository
          uses: actions/checkout@v3
      -   name: Run Test
          run: cd ./postgres && go test ./... -v -race
